{"version":3,"sources":["components/common/Input/input.module.css","components/SignInPage/SignIn/signIn.module.css","components/common/Button/button.module.css","components/Main/main.module.css","components/common/Input/Input.tsx","components/common/Button/Button.tsx","components/RegistrationPage/Registration/Registration.tsx","components/RegistrationPage/Registration/RegistrationContainer.tsx","components/SetNewPasswordPage/SetNewPassword.tsx","components/SetNewPasswordPage/SetNewPasswordContainer.tsx","components/ProfilePage/Profile/Profile.tsx","components/ProfilePage/Profile/ProfileContainer.tsx","components/ForgotPasswordPage/ForgotPassword/ForgotPassword.tsx","components/ForgotPasswordPage/ForgotPassword/ForgotPasswordContainer.tsx","components/ForgotPasswordPage/ForgotPasswordPage.tsx","components/SignInPage/SignIn/SignIn.tsx","components/SignInPage/SignIn/SignInContainer.tsx","components/SignInPage/SignInPage.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Header/header.module.css"],"names":["module","exports","Input","props","onEnter","error","restProps","inputStyle","style","input","inputError","className","type","name","onKeyDown","e","charCode","Button","button","Registration","placeholder","to","SIGN_IN_PATH","RegistrationContainer","SetNewPassword","SetNewPasswordContainer","Profile","ProfileContainer","ForgotPassword","FORGOT_PASSWORD_PATH","ForgotPasswordContainer","ForgotPasswordPage","SignIn","signIn","REGISTER_PATH","SignInContainer","wraper","SignInPage","Routes","path","component","Header","header","link","HeaderContainer","Main","main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2cb36fda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__k8J0Q\",\"inputError\":\"input_inputError__lV3v_\",\"error\":\"input_error__2bxGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"signIn_wraper__20ITI\",\"signIn\":\"signIn_signIn__1mMsw\",\"form\":\"signIn_form__2Sh7y\",\"inputText\":\"signIn_inputText__2AuFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2xIPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__ZrJEr\"};","import React, { DetailedHTMLProps, InputHTMLAttributes } from 'react'\r\nimport style from './input.module.css'\r\n\r\n\r\ntype InputPropsType = {\r\n    onEnter?: () => void \r\n    error?: string\r\n}\r\n\r\nconst Input: React.FC<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & InputPropsType> = (props: InputPropsType) => {\r\n\r\n    const { onEnter, error, ...restProps } = props\r\n\r\n    let inputStyle = error ? style.input + ' ' + style.inputError : style.input\r\n\r\n    const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) onEnter && onEnter();\r\n    }\r\n\r\n    return <div>\r\n        <input className={inputStyle} type='text' name='myInput' onKeyDown={onKeyPress}  {...restProps} />\r\n       {error? <span className={style.error}>{error}</span>: null} \r\n    </div>\r\n}\r\n\r\nexport default Input\r\n\r\n","import React, { DetailedHTMLProps, ButtonHTMLAttributes } from 'react'\r\nimport style from './button.module.css'\r\n\r\n\r\ntype ButtonPropsType = {\r\n  \r\n}\r\n\r\nconst Button:React.FC< DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>& ButtonPropsType> =(props: ButtonPropsType )=>{\r\n    \r\n    return <div>\r\n        <button className = {style.button} {...props} />\r\n    </div>\r\n} \r\n\r\nexport default Button\r\n\r\n","import React from 'react'\r\nimport Input from '../../common/Input/Input'\r\nimport Button from '../../common/Button/Button'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { SIGN_IN_PATH } from '../../Routes/Routes'\r\n\r\n\r\ntype RegistrationPropsType = {\r\n\r\n}\r\n\r\nconst Registration: React.FC<RegistrationPropsType> = () => {\r\n    return <div>\r\n        <Input placeholder='login' />\r\n        <Input type='password' placeholder='password' />\r\n        <Input type='password' placeholder='password' />\r\n        <Input type='checkbox' />\r\n        <Button>SIGN UP</Button>\r\n        <NavLink to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Registration","import React from 'react'\r\nimport Registration from './Registration'\r\n\r\n\r\ninterface IRegistrationContainerProps {\r\n\r\n}\r\n\r\nconst RegistrationContainer: React.FC<IRegistrationContainerProps> = ()=>{\r\n    return <div>\r\n         <h2>SIGN UP</h2> \r\n    <Registration/>\r\n</div>\r\n}\r\n\r\nexport default RegistrationContainer","import React from 'react'\r\nimport Input from '../common/Input/Input'\r\nimport Button from '../common/Button/Button'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { SIGN_IN_PATH } from '../Routes/Routes'\r\n\r\ntype SetNewPasswordPropsType = {\r\n\r\n}\r\n\r\nconst SetNewPassword: React.FC<SetNewPasswordPropsType> = () => {\r\n    return <div>\r\n        <Input type=\"password\" />\r\n        <Input />\r\n        <Button>SEND PASSWORD</Button>\r\n        <NavLink to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n\r\n    </div>\r\n}\r\n\r\nexport default SetNewPassword","import React from 'react'\r\nimport SetNewPassword from './SetNewPassword'\r\n\r\n\r\ntype SetNewPasswordContainerPropsType = {\r\n\r\n}\r\n\r\nconst SetNewPasswordContainer: React.FC<SetNewPasswordContainerPropsType> = ()=>{\r\n    return <div>\r\n        <h2>SET NEW PASSWORD</h2>\r\n    <SetNewPassword/>\r\n</div>\r\n}\r\n\r\nexport default SetNewPasswordContainer","import React from 'react'\r\n\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nconst Profile :React.FC<ProfilePropsType> =()=>{\r\n    return <div>\r\n        Profile\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\n\r\ntype ProfileContainerPropsType = {\r\n\r\n}\r\n\r\nconst ProfileContainer : React.FC<ProfileContainerPropsType>=()=>{\r\n    return <div><Profile/></div>\r\n}\r\n\r\nexport default ProfileContainer","import React from 'react'\r\nimport Input from '../../common/Input/Input'\r\nimport Button from '../../common/Button/Button'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FORGOT_PASSWORD_PATH, SIGN_IN_PATH } from '../../Routes/Routes'\r\n\r\n\r\ninterface IForgotPasswordProps {\r\n\r\n}\r\n\r\nconst ForgotPassword: React.FC<IForgotPasswordProps> = ()=>{\r\n    return <div>\r\n       <Input type = 'email' placeholder = 'email'/>\r\n       <NavLink to={FORGOT_PASSWORD_PATH}> Forgot password?</NavLink>\r\n       <Button>SEND NEW PASSWORD</Button>\r\n       <NavLink to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n</div>\r\n}\r\n\r\nexport default ForgotPassword","import React from 'react'\r\nimport ForgotPassword from './ForgotPassword'\r\n\r\n\r\ninterface IForgotPasswordContainerProps {\r\n\r\n}\r\n\r\nconst ForgotPasswordContainer: React.FC<IForgotPasswordContainerProps> = () => {\r\n    return <div>\r\n        <h2>FORGOT PASSWORD</h2>\r\n        <ForgotPassword />\r\n    </div>\r\n}\r\n\r\nexport default ForgotPasswordContainer","import React from 'react'\r\nimport ForgotPasswordContainer from './ForgotPassword/ForgotPasswordContainer'\r\n\r\n\r\n\r\ninterface IForgotPasswordPageProps {\r\n\r\n}\r\n\r\nconst ForgotPasswordPage: React.FC<IForgotPasswordPageProps> = ()=>{\r\n    return <div>\r\n    <ForgotPasswordContainer/>\r\n</div>\r\n}\r\n\r\nexport default ForgotPasswordPage","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './signIn.module.css'\r\nimport Input from '../../common/Input/Input'\r\nimport Button from '../../common/Button/Button'\r\nimport {  REGISTER_PATH } from '../../Routes/Routes'\r\n\r\n\r\ntype SignInPropsType = {\r\n\r\n}\r\n\r\nconst SignIn: React.FC<SignInPropsType> = () => {\r\n    return <div className={style.signIn}>\r\n        <Input placeholder='login'/>\r\n        <Input type = 'password'  placeholder='password'/>\r\n        <Input type = 'checkbox'/>  <span>Remember Me</span>\r\n        <Button>SIGN IN</Button>\r\n        <NavLink to={REGISTER_PATH}>Registration</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default SignIn","import React from 'react'\r\nimport SignIn from './SignIn'\r\nimport style from './signIn.module.css'\r\n\r\n\r\ntype SignInContainerPropsType = {\r\n\r\n}\r\n\r\nconst SignInContainer : React.FC<SignInContainerPropsType>=()=>{\r\n    return <div className={style.wraper}>\r\n       <h2>SIGN IN</h2> \r\n        <SignIn/>\r\n        </div>\r\n}\r\n\r\nexport default SignInContainer","import React from 'react'\r\nimport SignInContainer from './SignIn/SignInContainer'\r\n\r\n\r\n\r\ntype SignInPageType = {\r\n\r\n}\r\n\r\nconst SignInPage : React.FC<SignInPageType>=()=>{\r\n    return <>\r\n        <SignInContainer/>\r\n        </>\r\n}\r\n\r\nexport default SignInPage","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport RegistrationContainer from '../RegistrationPage/Registration/RegistrationContainer'\r\nimport SetNewPasswordContainer from '../SetNewPasswordPage/SetNewPasswordContainer'\r\nimport ProfileContainer from '../ProfilePage/Profile/ProfileContainer'\r\nimport ForgotPasswordPage from '../ForgotPasswordPage/ForgotPasswordPage'\r\nimport SignInPage from '../SignInPage/SignInPage'\r\n\r\n\r\nexport const SIGN_IN_PATH = '/sign-in';\r\nexport const REGISTER_PATH = '/registration';\r\nexport const FORGOT_PASSWORD_PATH = '/forgot-password';\r\nexport const SET_NEW_PASSWORD_PATH = '/set-new-password'; \r\nexport const PROFILE_PATH = '/profile'; \r\n\r\n\r\nconst Routes:React.FC = () =>{\r\n    return <>\r\n      <Route path={SIGN_IN_PATH} component={SignInPage} />\r\n        <Route path={REGISTER_PATH} component={RegistrationContainer} />\r\n        <Route path = {FORGOT_PASSWORD_PATH} component = {ForgotPasswordPage}/>\r\n        <Route path = {SET_NEW_PASSWORD_PATH } component = {SetNewPasswordContainer}/>\r\n        <Route path = {PROFILE_PATH} component = {ProfileContainer}/>\r\n    </>\r\n\r\n}\r\n\r\n\r\nexport default Routes\r\n","\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './header.module.css'\r\nimport { SIGN_IN_PATH, REGISTER_PATH, FORGOT_PASSWORD_PATH, SET_NEW_PASSWORD_PATH, PROFILE_PATH } from '../Routes/Routes'\r\n\r\n\r\n\r\ntype HeaderPropsType = {\r\n\r\n}\r\n\r\n const Header:React.FC<HeaderPropsType> = () =>{\r\n\r\n    return <div className={style.header}>\r\n        <NavLink className={style.link} to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n        <NavLink className={style.link} to={REGISTER_PATH}>REGISTRATION</NavLink>\r\n        <NavLink className={style.link} to = {FORGOT_PASSWORD_PATH}>FORGOT PASSWORD</NavLink>\r\n        <NavLink className={style.link} to = {SET_NEW_PASSWORD_PATH}>SET NEW PASSWORD</NavLink>\r\n        <NavLink className={style.link} to = {PROFILE_PATH}> PROFILE</NavLink>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './Header'\r\nimport style from './header.module.css'\r\n interface IHeaderContainerProps {\r\n\r\n }\r\n\r\nconst HeaderContainer:React.FC<IHeaderContainerProps>= ()=>{\r\n  return <div className = {style.wraper}>\r\n      <Header/>\r\n  </div>\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react'\r\nimport style from './main.module.css'\r\nimport Routes from '../Routes/Routes'\r\n\r\n\r\n\r\n\r\n const Main:React.FC = () =>{\r\n\r\n    return <div className={style.main}>\r\n     <Routes/>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { HashRouter } from 'react-router-dom';\nimport Main from './components/Main/Main';\n\n\n\nfunction App() {\n  return (\n\n    <HashRouter>\n      <div className=\"App\">\n        <HeaderContainer />\n        <Main />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"header_wraper__UnVwf\",\"header\":\"header_header__1-L5A\",\"link\":\"header_link__14HVq\"};"],"sourceRoot":""}