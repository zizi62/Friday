{"version":3,"sources":["components/SignInPage/SignIn/signIn.module.css","components/common/Input/input.module.css","components/common/Button/button.module.css","components/common/ErrorMessage/errorMessage.module.css","components/common/Loading/loading.module.css","components/Main/main.module.css","components/common/Input/Input.tsx","components/common/Button/Button.tsx","components/RegistrationPage/Registration/Registration.tsx","components/api/signUpApi.ts","Redux/registrationReducer.ts","components/common/ErrorMessage/ErrorMessage.tsx","components/common/Loading/Loading.tsx","components/RegistrationPage/Registration/RegistrationContainer.tsx","components/SetNewPasswordPage/SetNewPassword.tsx","components/SetNewPasswordPage/SetNewPasswordContainer.tsx","components/api/forgotPassApi.ts","Redux/forgotPasswordReducer.ts","components/ForgotPasswordPage/ForgotPassword/ForgotPassword.tsx","components/ForgotPasswordPage/ForgotPassword/ForgotPasswordContainer.tsx","components/ForgotPasswordPage/ForgotPasswordPage.tsx","components/SignInPage/SignIn/SignIn.tsx","components/api/signInApi.ts","components/api/profileApi.ts","Redux/profileReducer.ts","Redux/signInReducer.ts","components/SignInPage/SignIn/SignInContainer.tsx","components/SignInPage/SignInPage.tsx","components/ProfilePage/Profile/Profile.tsx","components/ProfilePage/Profile/ProfileContainer.tsx","components/ProfilePage/ProfilePage.tsx","components/table/TableCards.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Main/Main.tsx","App.tsx","serviceWorker.ts","Redux/setNewPasswordReducer.ts","Redux/store.ts","index.tsx","components/Header/header.module.css"],"names":["module","exports","Input","props","onEnter","error","restProps","inputStyle","style","input","inputError","className","type","name","onKeyDown","e","charCode","Button","button","Registration","loading","email","password","checkPassword","setEmail","setPassword","setCheckPassword","signUp","placeholder","value","onChange","onClick","disabled","to","SIGN_IN_PATH","instance","axios","create","baseURL","signUpApi","post","then","res","data","success","initialState","setRegisterError","ErrorMessage","message","Loading","RegistrationContainer","useState","setEmailValue","setPasswordValue","setCheckPasswordValue","useSelector","state","registrationPage","dispatch","useDispatch","useCallback","currentTarget","length","a","fetchSignUp","SetNewPassword","SetNewPasswordContainer","forgotPassApi","ForgotPassword","er","console","log","setForgotPassword","ForgotPasswordContainer","store","forgotPasswordPage","ForgotPasswordPage","SignIn","rememberMe","setRememberMe","signIn","checked","FORGOT_PASSWORD_PATH","REGISTER_PATH","signInApi","localStorageApi","token","localStorage","setItem","getItem","profileApi","profile","setProfileSuccess","setTokenSuccess","setError","isAuth","setAuthSuccess","setErrorMessage","SignInContainer","signInPage","setRememberMeValue","response","signInSuccess","wraper","SignInPage","PROFILE_PATH","Profile","ProfileContainer","profilePage","useEffect","getState","ProfilePage","TableCards","React","columns","title","field","lookup","34","63","surname","birthYear","birthCity","setState","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","Routes","exact","path","component","Header","disableMenu","setDisableMenu","header","link","HeaderContainer","Main","main","App","IsAuth","setIsAuth","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","setNewPasswordPage","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.53272531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"signIn_wraper__20ITI\",\"signIn\":\"signIn_signIn__1mMsw\",\"form\":\"signIn_form__2Sh7y\",\"inputText\":\"signIn_inputText__2AuFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__k8J0Q\",\"inputError\":\"input_inputError__lV3v_\",\"error\":\"input_error__2bxGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2xIPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"errorMessage_error__33Qmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loading_loading__1QcTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__ZrJEr\"};","import React, { DetailedHTMLProps, InputHTMLAttributes } from 'react'\r\nimport style from './input.module.css'\r\n\r\n\r\ntype InputPropsType = {\r\n    onEnter?: () => void \r\n    error?: string\r\n}\r\n\r\nconst Input: React.FC<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & InputPropsType> = (props: InputPropsType) => {\r\n\r\n    const { onEnter, error, ...restProps } = props\r\n\r\n    let inputStyle = error ? style.input + ' ' + style.inputError : style.input\r\n\r\n    const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) onEnter && onEnter();\r\n    }\r\n\r\n    return <div>\r\n        <input className={inputStyle} type='text' name='myInput' onKeyDown={onKeyPress}  {...restProps} />\r\n       {/* {error? <span className={style.error}>{error}</span>: null}  */}\r\n    </div>\r\n}\r\n\r\nexport default Input\r\n\r\n","import React, { DetailedHTMLProps, ButtonHTMLAttributes } from 'react'\r\nimport style from './button.module.css'\r\n\r\n\r\ntype ButtonPropsType = {\r\n  \r\n}\r\n\r\nconst Button:React.FC< DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>& ButtonPropsType> =(props: ButtonPropsType )=>{\r\n    \r\n    return <div>\r\n        <button className = {style.button} {...props} />\r\n    </div>\r\n} \r\n\r\nexport default Button\r\n\r\n","import React from 'react'\r\nimport Input from '../../common/Input/Input'\r\nimport Button from '../../common/Button/Button'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {SIGN_IN_PATH} from '../../Routes/Routes'\r\n\r\ntype RegistrationPropsType = {\r\n    loading: boolean\r\n    email: string\r\n    password: string\r\n    checkPassword: string\r\n    error?: string\r\n    setEmail: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    setPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    setCheckPassword: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    signUp: () => void\r\n}\r\n\r\nconst Registration: React.FC<RegistrationPropsType> = (props) => {\r\n    const {loading, email, password, checkPassword, error, setEmail, setPassword, setCheckPassword, signUp} = props;\r\n\r\n    return <div>\r\n        <Input\r\n            placeholder='login'\r\n            value={email}\r\n            onChange={setEmail}\r\n        />\r\n        <Input\r\n            type='password'\r\n            placeholder='password'\r\n            value={password}\r\n            onChange={setPassword}\r\n            error={error}\r\n        />\r\n        <Input\r\n            type='password'\r\n            placeholder='check password'\r\n            value={checkPassword}\r\n            onChange={setCheckPassword}\r\n            error={error}\r\n        />\r\n        <Button\r\n            onClick={signUp}\r\n            disabled={!!loading}\r\n        >\r\n            SIGN UP\r\n        </Button >\r\n        <NavLink to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n    </div>\r\n};\r\n\r\nexport default Registration","import axios from \"axios\";\r\n\r\nexport type IAddedUser = {\r\n    addedUser: IUser\r\n    success: boolean\r\n}\r\n\r\nexport type IUser = {\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\r\n});\r\n\r\nexport const signUpApi = {\r\n    fetchRegister(email: string, password: string): Promise<any> {\r\n        return instance.post<IAddedUser>('auth/register', {email, password}).then(res => res.data.success)\r\n    }\r\n};","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport {IUser, signUpApi} from \"../components/api/signUpApi\";\r\n\r\nconst IS_REGISTER_SUCCESS = 'signUp/IIS_REGISTER_SUCCESS';\r\nconst SET_REGISTER_ERROR = 'signUp/SET_REGISTER_ERROR';\r\nconst SET_LOADING = 'SET_LOADING';\r\n\r\nconst initialState = {\r\n    error: '',\r\n    success: false,\r\n    loading: false\r\n};\r\n\r\nexport type InitialStateRegisterType = typeof initialState;\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionType): InitialStateRegisterType => {\r\n    switch (action.type) {\r\n        case IS_REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: true,\r\n                loading: false\r\n            };\r\n        case SET_REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                success: false,\r\n                loading: false\r\n            };\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ISetRegisterError = {\r\n    type: typeof SET_REGISTER_ERROR\r\n    error: string\r\n};\r\n\r\ntype ISetRegisterSuccess = {\r\n    type: typeof IS_REGISTER_SUCCESS\r\n};\r\n\r\ntype ISetLoading = {\r\n    type: typeof SET_LOADING\r\n};\r\n\r\ntype ActionType = ISetRegisterError | ISetRegisterSuccess | ISetLoading\r\n\r\n// ******* ActionCreator *******\r\nexport const setRegisterError = (error: string): ISetRegisterError => ({type: SET_REGISTER_ERROR, error});\r\nexport const setRegisterSuccess = (): ISetRegisterSuccess => ({type: IS_REGISTER_SUCCESS});\r\nexport const setLoading = (): ISetLoading => ({type: SET_LOADING});\r\n\r\n// ******* ThunkCreator *******\r\ntype ThunkActionType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n\r\nexport const fetchSignUp = (email: string, password: string): ThunkActionType => async (dispatch) => {\r\n    try {\r\n        dispatch(setLoading());\r\n        const success = await signUpApi.fetchRegister(email, password);\r\n\r\n        if(success) {\r\n            dispatch(setRegisterSuccess());\r\n        }\r\n\r\n    } catch (e) {\r\n        dispatch(setRegisterError(e.message));\r\n    }\r\n};\r\n\r\n","import React from 'react'\r\nimport style from './errorMessage.module.css'\r\n\r\ntype ErrorMessagePropsType = {\r\n    message?: string\r\n}\r\n\r\n\r\nconst ErrorMessage: React.FC<ErrorMessagePropsType> = (props) => {\r\n\r\n    const { message } = props\r\n    return <>\r\n        <p className={style.error}>{message}</p>\r\n    </>\r\n}\r\n\r\nexport default ErrorMessage","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport style from './loading.module.css'\r\n\r\nconst Loading: React.FC<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {}> = (props: {}) => {\r\n    return (\r\n        <p className={style.loading}>Loading...</p>\r\n    )\r\n};\r\n\r\nexport default Loading;","import React, {useCallback, useState} from 'react'\r\nimport Registration from './Registration'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchSignUp, setRegisterError} from \"../../../Redux/registrationReducer\";\r\nimport {AppStateType} from \"../../../Redux/store\";\r\nimport ErrorMessage from \"../../common/ErrorMessage/ErrorMessage\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {SIGN_IN_PATH} from \"../../Routes/Routes\";\r\nimport Loading from \"../../common/Loading/Loading\";\r\n\r\ninterface IRegistrationContainerProps {\r\n\r\n}\r\n\r\nconst RegistrationContainer: React.FC<IRegistrationContainerProps> = () => {\r\n    const [email, setEmailValue] = useState('');\r\n    const [password, setPasswordValue] = useState('');\r\n    const [checkPassword, setCheckPasswordValue] = useState('');\r\n    const {error, success, loading} = useSelector((state: AppStateType) => state.registrationPage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n            setEmailValue(e.currentTarget.value);\r\n            dispatch(setRegisterError(\"\"));\r\n    }, [setEmailValue]);\r\n\r\n    const setPassword = useCallback(\r\n        (e: React.ChangeEvent<HTMLInputElement>) => {\r\n            setPasswordValue(e.currentTarget.value);\r\n        },[setPasswordValue]\r\n    );\r\n\r\n    const setCheckPassword = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCheckPasswordValue(e.currentTarget.value);\r\n    }, [setCheckPasswordValue]);\r\n\r\n    const signUp = useCallback(() => {\r\n\r\n        if(password.length !== checkPassword.length || password !== checkPassword) {\r\n            dispatch(setRegisterError(\"passwords don't match\"));\r\n            return;\r\n        }\r\n\r\n        if(!!email && !!password && !!checkPassword){\r\n            dispatch(fetchSignUp(email, password));\r\n        }\r\n    }, [email, password, checkPassword]);\r\n\r\n    if(success) {\r\n        return <Redirect to={SIGN_IN_PATH} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>SIGN UP</h2>\r\n\r\n            {loading && <Loading/>}\r\n            {!!error && <ErrorMessage message={error} />}\r\n\r\n            <Registration\r\n                loading={loading}\r\n                email = {email}\r\n                password = {password}\r\n                checkPassword = {checkPassword}\r\n                error = {error}\r\n                setEmail = {setEmail}\r\n                setPassword = {setPassword}\r\n                setCheckPassword = {setCheckPassword}\r\n                signUp = {signUp}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RegistrationContainer;","import React from 'react'\r\nimport Input from '../common/Input/Input'\r\nimport Button from '../common/Button/Button'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { SIGN_IN_PATH } from '../Routes/Routes'\r\n\r\ntype SetNewPasswordPropsType = {\r\n\r\n}\r\n\r\nconst SetNewPassword: React.FC<SetNewPasswordPropsType> = () => {\r\n    return <div>\r\n        <Input type=\"password\" />\r\n        <Input />\r\n        <Button>SEND PASSWORD</Button>\r\n        <NavLink to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n\r\n    </div>\r\n}\r\n\r\nexport default SetNewPassword","import React from 'react'\r\nimport SetNewPassword from './SetNewPassword'\r\n\r\n\r\ntype SetNewPasswordContainerPropsType = {\r\n\r\n}\r\n\r\nconst SetNewPasswordContainer: React.FC<SetNewPasswordContainerPropsType> = ()=>{\r\n    return <div>\r\n        <h2>SET NEW PASSWORD</h2>\r\n    <SetNewPassword/>\r\n</div>\r\n}\r\n\r\nexport default SetNewPasswordContainer","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'});\r\n\r\nexport const forgotPassApi = {\r\n\tasync forgotPass(email: string) {\r\n\t\treturn await instance.post<any>(`auth/forgot`, { email });\r\n\t}\r\n};","import { Dispatch } from 'redux';\r\nimport { forgotPassApi } from '../components/api/forgotPassApi';\r\n\r\nconst FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nconst FORGOT_PASSWORD_ERROR = 'FORGOT_PASSWORD_ERROR';\r\n\r\n\r\nconst initialState = {\r\n\tsuccess: false,\r\n\terror: ''\r\n};\r\n\r\ntype ISetForgotError = {\r\n    type: typeof FORGOT_PASSWORD_ERROR;\r\n    error: string;\r\n};\r\n\r\ntype ISetForgotSuccess = {\r\n    type: typeof FORGOT_PASSWORD_SUCCESS;\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport const forgotPasswordReducer = (state = initialState, action:any) => {\r\n\tswitch (action.type) {\r\n\t\tcase FORGOT_PASSWORD_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, success: true, error: ''\r\n\t\t\t};\r\n\t\tcase FORGOT_PASSWORD_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state, error: action.error.message\r\n\t\t\t};\r\n\t};\r\n  return state;\r\n};\r\n\r\nexport const forgotPasswordSuccessAC = (): ISetForgotSuccess => {\r\n\treturn {\r\n\t\ttype: FORGOT_PASSWORD_SUCCESS\r\n\t};\r\n};\r\n\r\nexport const forgotPasswordErrorAC = (error: string): ISetForgotError => {\r\n\treturn {\r\n\t\ttype: FORGOT_PASSWORD_ERROR,\r\n\t\terror\r\n\t};\r\n};\r\n\r\nexport const setForgotPassword = (email: string) => async (dispatch: Dispatch) => {\r\n\ttry {\r\n\t\tawait forgotPassApi.forgotPass(email);\r\n\t} catch (error) {\r\n\t\tconst er = error;\r\n\t\tconsole.log(er)\r\n\t\tdispatch(forgotPasswordErrorAC(error))\r\n\t}\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport Input from '../../common/Input/Input';\r\nimport Button from '../../common/Button/Button';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { SIGN_IN_PATH } from '../../Routes/Routes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setForgotPassword } from '../../../Redux/forgotPasswordReducer';\r\n\r\n\r\ninterface IForgotPasswordProps {\r\n\terror: string;\r\n};\r\n\r\nconst ForgotPassword: React.FC<IForgotPasswordProps> = (props) => {\r\n\r\n\tconst [email, setEmailValue] = useState<string>('');\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst setEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmailValue(e.currentTarget.value);\r\n\t}, [setEmailValue]);\r\n\r\n\tconst setForgotPass = () => {\r\n\t\tdispatch(setForgotPassword(email));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Input \r\n\t\t\ttype='email' \r\n\t\t\tplaceholder='email' \r\n\t\t\tonChange={setEmail} \r\n\t\t\tvalue={email} \r\n\t\t\terror={props.error} />\r\n\r\n\t\t\t<Button onClick={setForgotPass}>Send email</Button>\r\n\t\t\t<NavLink to={SIGN_IN_PATH}>Sign in</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport ErrorMessage from '../../common/ErrorMessage/ErrorMessage';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../Redux/store';\r\n\r\ninterface IForgotPasswordContainerProps {\r\n\r\n};\r\n\r\n\r\nconst ForgotPasswordContainer: React.FC<IForgotPasswordContainerProps> = () => {\r\n\r\n\tconst error = useSelector((store: AppStateType) => store.forgotPasswordPage.error);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>FORGOT PASSWORD</h2>\r\n\t\t\t{!!error && <ErrorMessage message={error} />}\r\n\t\t\t<ForgotPassword error={error} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ForgotPasswordContainer;","import React from 'react'\r\nimport ForgotPasswordContainer from './ForgotPassword/ForgotPasswordContainer'\r\n\r\n\r\n\r\ninterface IForgotPasswordPageProps {\r\n\r\n}\r\n\r\nconst ForgotPasswordPage: React.FC<IForgotPasswordPageProps> = ()=>{\r\n    return <div>\r\n    <ForgotPasswordContainer/>\r\n</div>\r\n}\r\n\r\nexport default ForgotPasswordPage","import React, { useState, ChangeEvent } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './signIn.module.css';\r\nimport Input from '../../common/Input/Input';\r\nimport Button from '../../common/Button/Button';\r\nimport { REGISTER_PATH } from '../../Routes/Routes';\r\nimport { FORGOT_PASSWORD_PATH } from './../../Routes/Routes';\r\n\r\n\r\ntype SignInPropsType = {\r\n    email : string | undefined\r\n    password: string | undefined\r\n    rememberMe: boolean\r\n    error: string | undefined\r\n    setEmail : (e: ChangeEvent<HTMLInputElement>)=> void\r\n    setPassword : (e: ChangeEvent<HTMLInputElement>)=>void\r\n    setRememberMe : (e: ChangeEvent<HTMLInputElement>)=> void\r\n    signIn:() => void\r\n};\r\n\r\n\r\nconst SignIn: React.FC<SignInPropsType> = (props) => {\r\n\r\nconst {email, password, rememberMe,error, setEmail, setPassword, setRememberMe, signIn} = props;\r\n\r\n    return (\r\n\t\t<div className={style.signIn}>\r\n        <Input placeholder='email' type = 'email' onChange ={setEmail} value={email} error={error}/>\r\n        <Input type = 'password'  placeholder='password' onChange ={setPassword} value={password} error={error}/>\r\n        <Input type = 'checkbox' onChange ={setRememberMe} checked={rememberMe}/>  \r\n        <span>Remember Me</span>\r\n        <Button onClick = {signIn}>SIGN IN</Button>\r\n        <NavLink to={FORGOT_PASSWORD_PATH}>Forgot password?</NavLink>\r\n\t\t\t\t<br/>\r\n        <NavLink to={REGISTER_PATH}>Registration</NavLink>\r\n    </div>\r\n\t\t);\r\n};\r\n\r\nexport default SignIn;","import axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\r\n});\r\n\r\ntype signInSuccesType = {\r\n    token: string\r\n}\r\n\r\ntype getSighInType =  signInSuccesType & {error: string}\r\n\r\nexport const signInApi = {   \r\n         async signIn(email: string, password: string, rememberMe: boolean) {\r\n             return await instance.post<getSighInType>(`auth/login`, {email, password, rememberMe})\r\n          \r\n        }      \r\n        \r\n//         async signIn(email: string, password: string, rememberMe: boolean) {\r\n//             debugger\r\n//             email = 'zizi@gmail.com'\r\n//             password = '12345678'\r\n//             return await instance.post(`auth/register`, {email, password})\r\n         \r\n//        } \r\n    }\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { ProfileType } from \"../../Redux/profileReducer\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL : 'https://cards-nya-back.herokuapp.com/1.0/'\r\n \r\n});\r\n\r\nexport const localStorageApi = {\r\n    setToken(token: string){\r\n        localStorage.setItem('token', token) \r\n    },\r\n    getToken(){\r\n        return localStorage.getItem('token')\r\n    }\r\n}\r\nexport const profileApi = {   \r\n    async getProfile(token: string|null) {\r\n       return await instance.post<ProfileType>(`auth/me`, {token})     \r\n    }\r\n}\r\n\r\n","import { profileApi, localStorageApi} from \"../components/api/profileApi\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AppStateType } from \"./store\";\r\nimport { setAuthSuccess } from \"./signInReducer\";\r\n\r\nconst SET_PROFILE = 'profile/SET_PROFILE'\r\nconst SET_TOKEN = 'profile/SET_TOKEN'\r\nconst SET_ERROR = 'profile/SET_ERROR'\r\n\r\nexport type ProfileType ={\r\n  name: string,\r\n  rememberMe :boolean\r\n  token: string\r\n}\r\n\r\nconst initialState = {\r\n  profile: {} as ProfileType,\r\n  error : '',\r\n  token : ''\r\n\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport const profileReducer = (state= initialState, action: actionType) =>{\r\n  switch (action.type) {\r\n    case SET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n      case SET_TOKEN:\r\n        return {\r\n          ...state,\r\n          token: action.token\r\n        }\r\n      case SET_ERROR:\r\n        return {\r\n          ...state,\r\n          error: action.error\r\n        } \r\n    default:\r\n      return state\r\n  }\r\n  \r\n}\r\n\r\ntype actionType = setProfileSuccessActionType|setErrorActionType|setTokenTypeAction\r\n\r\ntype setProfileSuccessActionType = ({type : typeof  SET_PROFILE, profile: ProfileType})\r\ntype setErrorActionType = ({ type: typeof SET_ERROR, error: string })\r\ntype setTokenTypeAction = ({ type: typeof SET_TOKEN, token: string })\r\n \r\n \r\nexport const setProfileSuccess = (profile : ProfileType):setProfileSuccessActionType => ({type: SET_PROFILE, profile: profile})\r\nexport const setTokenSuccess = (token: string):setTokenTypeAction => ({type: SET_TOKEN, token: token})\r\nconst  setError = (error: string): setErrorActionType=>({type : SET_ERROR, error : error})\r\n\r\n\r\nexport const setProfile= () => async (dispatch: Dispatch,  getState: () => AppStateType) =>{\r\n  \r\n  try {\r\n    let token = getState().profilePage.token\r\n      let response = await profileApi.getProfile(token)\r\n        dispatch(setProfileSuccess(response.data))\r\n        dispatch(setTokenSuccess(response.data.token))\r\n        localStorageApi.setToken(response.data.token)\r\n        \r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(setError(error.response.data.error))\r\n      dispatch(setAuthSuccess(false))\r\n      console.log(error.response.data.error)\r\n    } else {\r\n      dispatch(setError('Some ERROR'))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { signInApi } from \"../components/api/signInApi\";\r\nimport { setTokenSuccess, setProfileSuccess, ProfileType } from \"./profileReducer\";\r\nimport { Dispatch } from \"redux\";\r\nimport { localStorageApi } from \"../components/api/profileApi\";\r\n\r\n\r\nconst IS_AUTH_SUCCESS = 'signIn/IS_AUTH_SUCCESS'\r\nconst SET_ERROR = 'signIn/SET_ERROR'\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  error: ''\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport const signInReducer = (state: InitialStateType = initialState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case IS_AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuth: action.isAuth\r\n      }\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\ntype ActionType = setAuthSuccessActionType | setErrorActionType\r\n\r\ntype setAuthSuccessActionType = {\r\n  type: typeof IS_AUTH_SUCCESS\r\n  isAuth: boolean\r\n  error: string\r\n}\r\n\r\ntype setErrorActionType = {\r\n  type: typeof SET_ERROR\r\n  error: string\r\n  isAuth: boolean\r\n}\r\n\r\n\r\nexport const setAuthSuccess = (isAuth: boolean): setAuthSuccessActionType => ({ type: IS_AUTH_SUCCESS, error: '', isAuth: isAuth })\r\nconst setError = (error: string): setErrorActionType => ({ type: SET_ERROR, error: error, isAuth: false })\r\n\r\n\r\nexport const signInSuccess = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch) => {\r\n  try {\r\n    let response = await signInApi.signIn(email, password, rememberMe)\r\n    dispatch(setAuthSuccess(true))\r\n    dispatch(setTokenSuccess(response.data.token))\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch(setError(error.response.data.error))\r\n    } else {\r\n      dispatch(setError('Some ERROR'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const siginOutFromProfile = () => (dispatch: Dispatch) => {\r\n  localStorageApi.setToken('')\r\n  dispatch(setAuthSuccess(false))\r\n  dispatch(setProfileSuccess({} as ProfileType))\r\n}\r\n\r\nexport const setIsAuth = (IsAuth: boolean, token: string) => (dispatch: Dispatch) => {\r\n  dispatch(setAuthSuccess(IsAuth))\r\n  dispatch(setTokenSuccess(token))\r\n\r\n}\r\n\r\nexport const setErrorMessage = (error: string) => (dispatch: Dispatch) => {\r\n  dispatch(setError(error))\r\n}\r\n","import React, {useState, useCallback} from 'react'\r\nimport SignIn from './SignIn'\r\nimport style from './signIn.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {signInSuccess, setErrorMessage} from '../../../Redux/signInReducer'\r\nimport {AppStateType} from '../../../Redux/store'\r\nimport ErrorMessage from '../../common/ErrorMessage/ErrorMessage'\r\n\r\n\r\ntype SignInContainerPropsType = {}\r\n\r\nconst SignInContainer: React.FC<SignInContainerPropsType> = () => {\r\n\r\n    const error = useSelector((store: AppStateType) => store.signInPage.error)\r\n\r\n    const [email, setEmailValue] = useState<string>('')\r\n    const [password, setPasswordValue] = useState<string>('')\r\n    const [rememberMe, setRememberMeValue] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch();\r\n    const signIn = useCallback(\r\n        () => {\r\n            if (email && password) {\r\n                dispatch(signInSuccess(email, password, rememberMe))\r\n                setEmailValue('')\r\n                setPasswordValue('')\r\n                setRememberMeValue(false)\r\n            } else {\r\n                dispatch(setErrorMessage('all fields must be filled'))\r\n                return\r\n            }\r\n        },\r\n        [email, password, rememberMe, dispatch]\r\n    );\r\n\r\n\r\n    const setEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n        dispatch(setErrorMessage(''))\r\n\r\n    }, [setEmailValue]);\r\n    const setPassword = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.currentTarget.value)\r\n        dispatch(setErrorMessage(''))\r\n    }, [setPasswordValue]);\r\n    const setRememberMe = useCallback((e: React.ChangeEvent<HTMLInputElement>) => setRememberMeValue(e.currentTarget.checked), [setRememberMeValue]);\r\n\r\n    return <div className={style.wraper}>\r\n        <h2>SIGN IN</h2>\r\n        {error && <ErrorMessage message={error}/>}\r\n        <SignIn email={email}\r\n                password={password}\r\n                rememberMe={rememberMe}\r\n                error={error}\r\n                setEmail={setEmail}\r\n                setPassword={setPassword}\r\n                setRememberMe={setRememberMe}\r\n                signIn={signIn}/>\r\n    </div>\r\n}\r\n\r\nexport default SignInContainer","import React from 'react'\r\nimport SignInContainer from './SignIn/SignInContainer'\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { PROFILE_PATH } from '../Routes/Routes';\r\n\r\n\r\n\r\ntype SignInPageType = {\r\n\r\n}\r\n\r\nconst SignInPage : React.FC<SignInPageType>=()=>{\r\n    const isAuth = useSelector((store: AppStateType) => store.signInPage.isAuth);\r\n    return <>\r\n      {isAuth && <Redirect to={PROFILE_PATH} />}  \r\n        <SignInContainer/>\r\n        </>\r\n}\r\n\r\nexport default SignInPage","import React from 'react'\r\nimport { ProfileType } from '../../../Redux/profileReducer'\r\n\r\n\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst Profile :React.FC<ProfilePropsType> =(props)=>{\r\n    const {profile} = props\r\n    return <div>\r\n       <h2>{profile.name}</h2>\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React, { useEffect } from 'react'\r\nimport Profile from './Profile'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setProfile } from '../../../Redux/profileReducer';\r\nimport { AppStateType } from '../../../Redux/store';\r\nimport Button from '../../common/Button/Button';\r\nimport { siginOutFromProfile } from '../../../Redux/signInReducer';\r\n\r\ntype ProfileContainerPropsType = {\r\n\r\n}\r\n\r\nconst ProfileContainer: React.FC<ProfileContainerPropsType> = () => {\r\n\r\n     const profile = useSelector((store: AppStateType )=> store.profilePage.profile)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        !profile.name&&dispatch(setProfile()) \r\n    }, [])\r\n\r\n\r\n    const siginOut = ()=> dispatch(siginOutFromProfile())\r\n\r\n \r\n\r\n    return <div>\r\n        <Profile profile = {profile}/>\r\n        <Button onClick ={siginOut} >SIGN OUT</Button>\r\n        </div>\r\n}\r\n\r\nexport default ProfileContainer","import React, { useEffect } from 'react'\r\nimport ProfileContainer from './Profile/ProfileContainer'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppStateType } from '../../Redux/store';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { SIGN_IN_PATH } from '../Routes/Routes';\r\nimport { setProfile } from '../../Redux/profileReducer';\r\n\r\n\r\ntype ProfilePagePropsType = {\r\n\r\n}\r\n\r\nconst ProfilePage :React.FC<ProfilePagePropsType> =()=>{\r\n\r\n  const isAuth = useSelector((store: AppStateType) => store.signInPage.isAuth);\r\n\r\n    return <div>\r\n       <h2>Profile</h2>\r\n      {\r\n        isAuth? <ProfileContainer/>\r\n        : <Redirect to={SIGN_IN_PATH }/>\r\n      }\r\n     \r\n    </div>\r\n}\r\n\r\nexport default ProfilePage","import React from 'react';\r\nimport MaterialTable, { Column } from 'material-table';\r\n\r\ninterface Row {\r\n  name: string;\r\n  surname: string;\r\n  birthYear: number;\r\n  birthCity: number;\r\n}\r\n\r\ninterface TableState {\r\n  columns: Array<Column<Row>>;\r\n  data: Row[];\r\n}\r\n\r\nexport default function TableCards() {\r\n  const [state, setState] = React.useState<TableState>({\r\n    columns: [\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Surname', field: 'surname' },\r\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n      {\r\n        title: 'Birth Place',\r\n        field: 'birthCity',\r\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n      },\r\n    ],\r\n    data: [\r\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n      {\r\n        name: 'Zerya Betül',\r\n        surname: 'Baran',\r\n        birthYear: 2017,\r\n        birthCity: 34,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport RegistrationContainer from '../RegistrationPage/Registration/RegistrationContainer';\r\nimport SetNewPasswordContainer from '../SetNewPasswordPage/SetNewPasswordContainer';\r\nimport ForgotPasswordPage from '../ForgotPasswordPage/ForgotPasswordPage';\r\nimport SignInPage from '../SignInPage/SignInPage';\r\nimport ProfilePage from '../ProfilePage/ProfilePage';\r\nimport TableCards from './../table/TableCards';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/';\r\nexport const REGISTER_PATH = '/registration';\r\nexport const FORGOT_PASSWORD_PATH = '/forgot-password';\r\nexport const SET_NEW_PASSWORD_PATH = '/set-new-password';\r\nexport const PROFILE_PATH = '/profile';\r\nexport const TABLE_CARDS = '/cards';\r\n\r\n\r\nconst Routes: React.FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Route exact path={SIGN_IN_PATH} component={SignInPage} />\r\n\t\t\t<Route path={REGISTER_PATH} component={RegistrationContainer} />\r\n\t\t\t<Route path={FORGOT_PASSWORD_PATH} component={ForgotPasswordPage} />\r\n\t\t\t<Route path={SET_NEW_PASSWORD_PATH} component={SetNewPasswordContainer} />\r\n\t\t\t<Route path={PROFILE_PATH} component={ProfilePage} />\r\n\t\t\t<Route path={TABLE_CARDS} component={TableCards} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\r\nimport style from './header.module.css';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport {\r\n\tSIGN_IN_PATH,\r\n\tREGISTER_PATH,\r\n\tFORGOT_PASSWORD_PATH,\r\n\tSET_NEW_PASSWORD_PATH,\r\n\tPROFILE_PATH,\r\n\tTABLE_CARDS\r\n} from '../Routes/Routes';\r\n\r\n\r\n\r\ntype HeaderPropsType = {\r\n\r\n};\r\n\r\ntype setDisableMenuType = {\r\n\tdisableMenu: boolean;\r\n};\r\n\r\nconst Header: React.FC<HeaderPropsType> = () => {\r\n\r\n\tconst [disableMenu, setDisableMenu] = useState<boolean>(true);\r\n\r\n\treturn (\r\n\t\t<div className={style.header}>\r\n\t\t\t{disableMenu ?\r\n\t\t\t\t<button onClick={() => setDisableMenu(false)}>Show navigation menu</button>\r\n\t\t\t\t:\r\n\t\t\t\t<>\r\n\t\t\t\t<button onClick={() => setDisableMenu(true)}>Hide navigation menu</button>\r\n\t\t\t\t\t<NavLink className={style.link} to={SIGN_IN_PATH}>SIGN IN</NavLink>\r\n\t\t\t\t\t<NavLink className={style.link} to={REGISTER_PATH}>REGISTRATION</NavLink>\r\n\t\t\t\t\t<NavLink className={style.link} to={FORGOT_PASSWORD_PATH}>FORGOT PASSWORD</NavLink>\r\n\t\t\t\t\t<NavLink className={style.link} to={SET_NEW_PASSWORD_PATH}>SET NEW PASSWORD</NavLink>\r\n\t\t\t\t\t<NavLink className={style.link} to={PROFILE_PATH}>PROFILE</NavLink>\r\n\t\t\t\t\t<NavLink className={style.link} to={TABLE_CARDS}>CARDS</NavLink>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header'\r\nimport style from './header.module.css'\r\n interface IHeaderContainerProps {\r\n\r\n }\r\n\r\nconst HeaderContainer:React.FC<IHeaderContainerProps>= ()=>{\r\n  return <div className = {style.wraper}>\r\n      <Header/>\r\n  </div>\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react'\r\nimport style from './main.module.css'\r\nimport Routes from '../Routes/Routes'\r\n\r\n\r\n\r\n\r\n const Main:React.FC = () =>{\r\n\r\n    return <div className={style.main}>\r\n     <Routes/>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Main","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Main from './components/Main/Main';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { setIsAuth } from './Redux/signInReducer';\r\nimport { localStorageApi } from './components/api/profileApi';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    let token = localStorageApi.getToken()\r\n    token && dispatch(setIsAuth(true, token))\r\n  }, [])\r\n\r\n\r\n  return <div className=\"App\">\r\n    <HeaderContainer />\r\n    <Main />\r\n  </div>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n   \r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport const setNewPasswordReducer = (state = initialState, action:any) =>{\r\n  return state\r\n};\r\n\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { forgotPasswordReducer } from \"./forgotPasswordReducer\";\r\nimport { registrationReducer } from \"./registrationReducer\";\r\nimport { setNewPasswordReducer } from \"./setNewPasswordReducer\";\r\nimport { signInReducer } from \"./signInReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    forgotPasswordPage: forgotPasswordReducer,\r\n    registrationPage: registrationReducer,\r\n    setNewPasswordPage: setNewPasswordReducer,\r\n    signInPage: signInReducer\r\n    \r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './Redux/store';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"header_wraper__UnVwf\",\"header\":\"header_header__1-L5A\",\"link\":\"header_link__14HVq\"};"],"sourceRoot":""}